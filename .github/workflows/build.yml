name: Linux build

on:
  push:
    paths:
      - Cargo.toml
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: cargo build -r
    
    - name: Get version from cargo.toml
      run: |
        if (${env:RUNNER_OS} -eq "Windows") {
          $version = (Select-String "version =.*" -Path ".\Cargo.toml" -SimpleMatch).Line -replace 'version = "|"'
        } else {
          $version = (grep 'version =' Cargo.toml | awk '{print $3}' | tr -d '"' | head -1)
        }
        echo "version=$version" >> $GITHUB_ENV

    - name: Upload release artifact
      uses: actions/upload-artifact@v2
      with:
        name: rust-kanban-${{ matrix.os }}
        path: target/release/rust-kanban

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Get version from Cargo.toml
      run: |
        echo "version=$(sed -n 's/version = "\(.*\)"/\1/p' Cargo.toml | head -1)" >> $GITHUB_ENV

    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: rust-kanban-windows-latest
        path: target/release/windows
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: rust-kanban-ubuntu-latest
        path: target/release/linux
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: rust-kanban-macos-latest
        path: target/release/macos

    - name: Create Release
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "v${{ env.version }}"
        prerelease: true
        title: "Development Build"
        files: |
          target/release/windows/rust-kanban
          target/release/linux/rust-kanban
          target/release/macos/rust-kanban
